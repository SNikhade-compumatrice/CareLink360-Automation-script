//***********Add New Recipient*****************************
//****Scenarios:
//** 1.  Verify Add New recipient page is displayed or not
//** 2.  Check Add New Recipient functionality for valid & invalid data through excel sheet and Add recipient
//** 3.  Check for the duplicate Recipient Id and Email Address
//** 4.  Find Recipient page is displayed or not when clicking on Find tab, select Recipient option
//** 5.  Click on "Click here" link present on Find Recipient page, check it is redirecting to Add New Recipient page
//** 6.  Search for the Recipient, check Recipient page is displayed or not
//** 7.  Check for the Recipient's Personnel Details with Details using while Adding recipient
//** 8.  Check for the Text Boxes in the Personnel details panel is Disabled before clicking on Edit button
//** 9.  Check for the text boxes is getting enabled after clicking on Edit button
//** 10. Check Personnel Details for valid & Invalid data and Update details
//** 11. Check After clicking on "Save Changes" button fields are getting disabled or not & Check Updated details saved or not
//** 12  Add Contact pop-up is displayed or not
//** 13. Check Add Recipient Contact functionality for valid and invalid data and Add Recipient contact
 
package com.carelink360Package1;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;

import com.carelink360Package.*;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.Test;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.AfterTest;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
public class AddNewRecipient extends StartUp1{
	private static String RfnVal, RlnVal, RPhnoVal, RemailVal, RaddressVal, RcityVal, RstateVal, RzipVal, RrecIdVal;
	private static WebElement Rfn ,Rln,Rphno, Remail,Raddress,Rcity, Rstate,Rzip,Rid, RSave, RCancel,BeconList_left,BeconList_right ,RightMove_Button, Latitude, Longitude;
    private static WebElement Becon_dropdown, BeconList_SelectId, Move_Forword, Move_Backword, LatitudeLongitude_Link,ErrMsg;
    private static Select sel;
	private static String becon;
	private static WebElement ERfn, ERln, ERPhno, ERemail;
	private static String ERfnVal, ERlnVal, ERPhnoVal;
	public static String Cfn_Val, Cln_Val, CPhno_Val, Cemail_Val,ECfn_Val, ECln_Val, ECPhno_Val, ECemail_Val ;
	public static WebElement Cfn,Cln,CPhno,Cemail, AddContact_Btn, CSave, EditContact_Btn, ECfn, ECln, ECPhno, ECemail, ECSave;
	public static WebElement SearchById;
	@BeforeTest
	  public void beforeTest() throws InvalidFormatException, IOException, InterruptedException 
	  {
		  start("https://cm-dev5.cloudapp.net:8443/#/");
		  login();
		  Thread.sleep(5000);
		  
	  }
	
	
	//****************To verify that Add New Recipient page is displayed*********************
	 @Test(priority=0)
	  public void AddRecipientPage_Displayed() throws InvalidFormatException, IOException, InterruptedException 
	  {
		  Thread.sleep(5000);
		  driver.findElement(By.xpath("//li[@id='mnuAdmin']/a")).click();//click on "Admin" tab
		  Thread.sleep(2000);
		  driver.findElement(By.xpath("//li[@id='mnuAdmin']/ul/li[2]")).click();//Select "Add New Recipient" option
		  Thread.sleep(5000);
		  String title1=driver.getTitle();//get Title of the "Add New Recipient" page
		  String ActualTitle="Add Recipients";
		  boolean res6=title1.contentEquals(ActualTitle);//match Expected and actual title
		  Assert.assertTrue(res6, "Add New Recipient page is not displayed");
		 
		 
	  }
	 
	 //**********************To check validation on Add New Recipient page******************
	  @Test(priority=1)
	  public void AddRecipient_ValidEvents() throws InvalidFormatException, IOException, InterruptedException 
	  {
		    String lc_Rfncellvalue="", lc_Rlncellvalue="",  lc_Rphnocellvalue="", lc_Remailcellvalue="";
		    String lc_Raddresscellvalue="", lc_Rcitycellvalue="", lc_Rstatecellvalue="", lc_Rzipcellvalue="";
		    String lc_Rbeaconcellvalue="",lc_Ridcellvalue="";
		    
		    
		    Rfn=driver.findElement(By.xpath(obj.getProperty("FirstName")));//First Name text box WebElement
		    Rln=driver.findElement(By.xpath(obj.getProperty("LastName"))); //Last Name text box WebElement
		    Rphno=driver.findElement(By.xpath(obj.getProperty("PhoneNo")));//Phone Number text box WebElement
		    Remail= driver.findElement(By.xpath(obj.getProperty("Email")));//Email text box WebElement
		    Raddress=driver.findElement(By.xpath(obj.getProperty("Addr")));//Address text box WebElement
		    Rcity=driver.findElement(By.xpath(obj.getProperty("Cty")));//City text box WebElement
		    Rstate=driver.findElement(By.xpath(obj.getProperty("State")));//State text box WebElement
		    Rzip=driver.findElement(By.xpath(obj.getProperty("Zip")));//ZipCode text box WebElement
		    LatitudeLongitude_Link=driver.findElement(By.xpath(obj.getProperty("LatitudeLongitude")));//GetLatitudeandLongitude link WebElement
		    Latitude=driver.findElement(By.xpath(obj.getProperty("Latitude")));//Latitude text box WebElement
		    Longitude=driver.findElement(By.xpath(obj.getProperty("Longitude")));//Longitude text box WebElement
		    BeconList_left=driver.findElement(By.xpath(obj.getProperty("BeconList_Left")));//Becon List box WebElement
		    BeconList_right=driver.findElement(By.xpath(obj.getProperty("BeconList_Right")));//Becon List box WebElement
		    Move_Forword=driver.findElement(By.xpath(obj.getProperty("MoveForward")));//Move Forward button WebElement
		   // Move_Backword=driver.findElement(By.xpath(obj.getProperty("MoveBackword")));//Move Backward button WebElement
		   BeconList_SelectId=driver.findElement(By.xpath(obj.getProperty("SelectBeconId")));//Select Becon Id from Becon list
		   RightMove_Button=driver.findElement(By.xpath(obj.getProperty("MoveForward")));//First Name text box
		   Becon_dropdown=driver.findElement(By.xpath(obj.getProperty("BeconDropDown")));//First Name text box
		   Rid=driver.findElement(By.xpath(obj.getProperty("RecipientId")));//First Name text box
		   RSave=  driver.findElement(By.xpath(obj.getProperty("RSave")));//First Name text box
		   RCancel=driver.findElement(By.xpath(obj.getProperty("RCancel")));//First Name text box

	    	/* match data from excel sheet with regular expression, if it is invalid then it will display prompt 
	    	 as "invalid" and switch to the next row, if any field is invalid or any mandatory field is blank 
	    	 then it will click on "Cancel" button, if valid data found into all the field then directly it will 
	    	 click on "Save" button */
		    int addrecrct=AddNewrecipient.getLastRowNum();
		    for (int i=1; i<=addrecrct; i++)
			{  
		    	
			     int j=0;
			     int count=0;
		    
		    try
		    {
		    	
		    	lc_Rfncellvalue=excelvalidation(AddNewrecipient.getRow(i).getCell(j)); //get first name from the excel sheet
		    	Rfn.sendKeys(lc_Rfncellvalue); //pass it to the First Name text box
		    	
		    	if(lc_Rfncellvalue.matches(RFNameregex)==false)
		    	{
		    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Recipient First Name');");//To display prompt
				       Thread.sleep(3000);
				       driver.switchTo().alert().accept();//To close prompt
				       System.out.println("Invalid User First Name: "+ lc_Rfncellvalue);
				       count=count+1;
		    	}
		    	else
		    	{
		    		Rfn.clear();
		    		Rfn.sendKeys(lc_Rfncellvalue);
		    		RfnVal=lc_Rfncellvalue;
		    		System.out.println(RfnVal);
		    		
		    	}
		     }
		     catch(NullPointerException ex)
		     {
		    	  Rfn.sendKeys("a");
			       Rfn.clear();
			       ((JavascriptExecutor)driver).executeScript("alert('Recipient First Name is Empty');");//To display prompt
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();//To close prompt
			       System.out.println("empty Recipient  first name");
			       count=count+1;
		      }
		    
		   try
		    {
		    	lc_Rlncellvalue=excelvalidation(AddNewrecipient.getRow(i).getCell(j+1));//To get Last name from excel sheet
		    	Rln.sendKeys(lc_Rlncellvalue);
		    	if(lc_Rlncellvalue.matches(RLNameregex)==false)
		    	{
		    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid User Last Name');");
				       Thread.sleep(3000);
				       driver.switchTo().alert().accept();
				       System.out.println("Invalid User Last Name: "+ lc_Rlncellvalue);
				       count=count+1;
		    	}
		    	else
		    	{
		    		Rln.clear();
		    		Rln.sendKeys(lc_Rlncellvalue);
		    		RlnVal=lc_Rlncellvalue;
		    		System.out.println(RlnVal);
		    	}
		     }
		     catch(NullPointerException ex)
		     {
		    	  Rln.sendKeys("a");
			       Rln.clear();
			       ((JavascriptExecutor)driver).executeScript("alert('User Last Name is Empty');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("empty user last name");
			       count=count+1;
		      }
		
		    try
		    {
		    	lc_Rphnocellvalue=excelvalidation(AddNewrecipient.getRow(i).getCell(j+2));//To get Phone number from excel sheet
		    	System.out.println(lc_Rphnocellvalue);
		    	Rphno.sendKeys(lc_Rphnocellvalue);
		    	if(lc_Rphnocellvalue.matches(Rphregex)==false)
		    	{
		    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Phone Number');");
				       Thread.sleep(3000);
				       driver.switchTo().alert().accept();
				       System.out.println("Invalid Phone No: "+ lc_Rphnocellvalue);
				       count=count+1;
		    	}
		    	else
		    	{
		    	Rphno.clear();
		    		Rphno.sendKeys(lc_Rphnocellvalue);
		    		RPhnoVal=lc_Rphnocellvalue;
		    		System.out.println(RPhnoVal);
		    	}
		     }
		     catch(NullPointerException ex)
		     {
		    	  Rphno.sendKeys("a");
			       Rphno.clear();
			       ((JavascriptExecutor)driver).executeScript("alert('Phone Number is empty');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("empty phone number");
			       count=count+1;
		        }
		    
		    	lc_Remailcellvalue=excelvalidation(AddNewrecipient.getRow(i).getCell(j+3));
		    	
		    	if(lc_Remailcellvalue.equals(""))
		    	{
		    		Remail.sendKeys("a");
				       Remail.clear();
				       ((JavascriptExecutor)driver).executeScript("alert('Email Address is empty');");
				       Thread.sleep(3000);
				       driver.switchTo().alert().accept();
				       System.out.println("empty Email Address");
				       count=count+1;
		    	 }
		        else
		    	{
		    	  Remail.sendKeys(lc_Remailcellvalue);
		    	  if(lc_Remailcellvalue.matches(Reidregex)==false)
		    	  {
		    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Email Address');");
				       Thread.sleep(3000);
				       driver.switchTo().alert().accept();
				       System.out.println("Invalid Email Address: "+ lc_Remailcellvalue);
				       count=count+1;
		    	  }
		    	  else
		    	  {
		    		Remail.clear();
		    		Remail.sendKeys(lc_Remailcellvalue);
		    		RemailVal=lc_Remailcellvalue;
		    		System.out.println(RemailVal);
		    		
		    	  }
		    	 
		       }
		    	
			   lc_Raddresscellvalue=excelvalidation(AddNewrecipient.getRow(i).getCell(j+4));
			   Raddress.sendKeys(lc_Raddresscellvalue);
			    	if(lc_Raddresscellvalue.equals(""))
			    	{
			    		 Raddress.sendKeys("a");
					       Raddress.clear();
					       ((JavascriptExecutor)driver).executeScript("alert('User Address Empty');");
					       Thread.sleep(3000);
					       driver.switchTo().alert().accept();
					       System.out.println("empty recipient address name");
					       count=count+1;
			    	}
			    	else
			    	{
			    		Raddress.clear();
			    		Raddress.sendKeys(lc_Raddresscellvalue);
			    		RaddressVal=lc_Raddresscellvalue;
			    		System.out.println(RaddressVal);
			    	} 
			   try
			   {
			   lc_Rcitycellvalue=excelvalidation(AddNewrecipient.getRow(i).getCell(j+5));
			   Rcity.sendKeys(lc_Rcitycellvalue);
			   
				   if(lc_Rcitycellvalue.matches(Rcityregex)==false)
			    	  {
			    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid City');");
					       Thread.sleep(3000);
					       driver.switchTo().alert().accept();
					       System.out.println("Invalid Citys: "+ lc_Rcitycellvalue);
					       count=count+1;
			    	  }
			    	  else
			    	  {
			    		Rcity.clear();
			    		Rcity.sendKeys(lc_Rcitycellvalue);
			    		RcityVal=lc_Rcitycellvalue;
			    		System.out.println(RcityVal);
			    	  }
			   }		
			   catch(NullPointerException ex)
			   {
				   Rcity.sendKeys("a");
			       Rcity.clear();
			       ((JavascriptExecutor)driver).executeScript("alert('User City Empty');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("empty user city name");
			       count=count+1;
			   }
			   
			   try
			   {
				    	lc_Rstatecellvalue=excelvalidation(AddNewrecipient.getRow(i).getCell(j+6));
				    	Select slt2=new Select(Rstate);
					    List<WebElement> states=slt2.getOptions();
					    int e3count=0;
					    for(WebElement e3:states)
					    {
					       if(e3.getText().equals(lc_Rstatecellvalue))
					       {
					    	   e3count=1;
					       }
					       else
					       {
					       }
					    }
					    if(e3count==1)
					    {
					    	Rstate.click();
					    	Thread.sleep(2000);
					    	slt2.selectByVisibleText(lc_Rstatecellvalue);
					    	RstateVal=lc_Rstatecellvalue;
				    		System.out.println(RstateVal);
					    	
					    }
					    else
					    {
					    	((JavascriptExecutor)driver).executeScript("alert('State is invalid');");
						       Thread.sleep(3000);
						       driver.switchTo().alert().accept();
						       System.out.println("State is invalid");
						       count=count+1;	 
					    }
					    
				    }
				     catch(NullPointerException ex)
				     {
				    	 
					       ((JavascriptExecutor)driver).executeScript("alert('State is Empty');");
					       Thread.sleep(3000);
					       driver.switchTo().alert().accept();
					       System.out.println("empty state");
					       count=count+1;
				      } 
			    	  
					    try
					    {
					    	lc_Rzipcellvalue=excelvalidation(AddNewrecipient.getRow(i).getCell(j+7));
					    	Rzip.sendKeys(lc_Rzipcellvalue);
					    	if(lc_Rzipcellvalue.matches(Rzipregex)==false)
					    	{
					    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid ZIP Code');");
							       Thread.sleep(3000);
							       driver.switchTo().alert().accept();
							       System.out.println("Invalid ZIP Code: "+ lc_Rzipcellvalue);
							       count=count+1;
					    	}
					    	else
					    	{
					    		Rzip.clear();
					    		Rzip.sendKeys(lc_Rzipcellvalue);
					    		RzipVal=lc_Rzipcellvalue;
					    		System.out.println(RzipVal);
					    		
					    	}
					     }
					     catch(NullPointerException ex)
					     {
					    	  Rzip.sendKeys("a");
						       Rzip.clear();
						       ((JavascriptExecutor)driver).executeScript("alert('ZIP Code is empty');");
						       Thread.sleep(3000);
						       driver.switchTo().alert().accept();
						       System.out.println("empty ZIP code");
						       count=count+1;
					        } 
						   
					    try
					    {
					    	
					    	lc_Ridcellvalue=excelvalidation(AddNewrecipient.getRow(i).getCell(j+8));
					    	Rid.sendKeys(lc_Ridcellvalue);
					    	RrecIdVal=lc_Ridcellvalue;
				    		System.out.println(RrecIdVal);
					    	/*if(Ridcellvalue.matches(Ridregex)==false)
					    	{
					    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Recipient ID');");
							       Thread.sleep(3000);
							       driver.switchTo().alert().accept();
							       System.out.println("Invalid Recipient ID: "+ Ridcellvalue);
							       count=count+1;
					    	}
					    	else
					    	{   
					    		Rid.clear();
					    		Rid.sendKeys(Ridcellvalue);
					         }*/
					     }
					     catch(NullPointerException ex)
					     {
					    	  Rid.sendKeys("a");
						       Rid.clear();
						       ((JavascriptExecutor)driver).executeScript("alert('Recipient ID is Empty');");
						       Thread.sleep(3000);
						       driver.switchTo().alert().accept();
						       System.out.println("empty Recipient ID");
						       count=count+1;
					      }
					 
					    
				  
		 Row row = AddNewrecipient.getRow(i);
		 Cell invalidcell=row.createCell(j+9);
		if(count!=0)
		{
						   
						   invalidcell.setCellValue("invalid");
						   RCancel.click();
			try
			{
				excelfile1= new FileOutputStream("C:\\Users\\compu\\Desktop\\Projects\\Carelink360\\TestData\\Automation1.xlsx");
			      wb.write(excelfile1);
			      excelfile1.close();
			     }
			  catch(Throwable t )
			     {
				  System.out.println("File not found");
			     }	 			
						  
				        
		   }
		 else
		   {
			   invalidcell.setCellValue("valid");
			   
			   try
			     {
		 			excelfile1= new FileOutputStream("C:\\Users\\compu\\Desktop\\Projects\\Carelink360\\TestData\\Automation1.xlsx");
			      wb.write(excelfile1);
			      excelfile1.close();
			     }
			  catch(Throwable t )
			     {
				  System.out.println("File not found");
			     }		  
			    LatitudeLongitude_Link.click();
			    Thread.sleep(4000);
			    String RLatVal=Latitude.getAttribute("value");
			    String RLongVal=Longitude.getAttribute("value");
			    System.out.println("Latitude is: "+RLatVal+"Longitude is: "+RLongVal);
			    BeconList_SelectId.click();
				RightMove_Button.click();
			    becon=driver.findElement(By.xpath(obj.getProperty("BeconList_Right"))).getText();
				System.out.println(becon);
				Thread.sleep(4000);
				sel=new Select(Becon_dropdown);
				sel.selectByVisibleText(becon);
				Thread.sleep(5000);
		        RSave.click();
	     String Msg1=driver.findElement(By.xpath(obj.getProperty("RSuccessMsg"))).getText();
       // wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(obj.getProperty("ErrorMsg3"))));
        System.out.println(Msg1);
        String ActualMsg1="Recipient Added";
        boolean res1=Msg1.matches(ActualMsg1);
      
        Assert.assertTrue(res1, Msg1);
	  Thread.sleep(5000);
		   }  //end of else	
		
		   }//end of for loop  
		    	     
	  }
	//@Test(priority=1)
	  public void RecipientIdExist() throws InterruptedException
	  {
	                 Thread.sleep(8000);
		             Rfn.sendKeys(RfnVal);
	                 Rln.sendKeys(RlnVal);
	                 Rphno.sendKeys(RPhnoVal);
	                 Remail.sendKeys(RemailVal);
	                 Raddress.sendKeys(RaddressVal);
	                 Rcity.sendKeys(RcityVal);
	                 Rstate.sendKeys(RstateVal);
	                 Rzip.sendKeys(RzipVal);
	                 LatitudeLongitude_Link.click();//click on getLatitude and longitude link
	                 Thread.sleep(4000);
	                 BeconList_left.click();
	                 RightMove_Button.click();
	                 Thread.sleep(1000);
	                 Rid.sendKeys(RrecIdVal);
	                String becon1=BeconList_right.getText();
	                 System.out.println(becon1);
	                 sel.selectByVisibleText(becon1);
	                 Thread.sleep(4000);
	                 driver.findElement(By.xpath(obj.getProperty("RSave"))).click();
	                 Thread.sleep(2000);
	                 ErrMsg=driver.findElement(By.xpath(obj.getProperty("RErrorMsg1")));
	                 String Msg2=driver.findElement(By.xpath(obj.getProperty("RErrorMsg1"))).getText();
	                 //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(obj.getProperty("ErrorMsg3"))));
	                 System.out.println(Msg2);
	                 String ActualMsg2="Recipient already exists.";
	                 boolean res2=Msg2.matches(ActualMsg2);
	                 Assert.assertTrue(res2,"Not added");
	  }
	//@Test(priority=2)
	  public void CancelBtn() throws InterruptedException
	  {
	                 Thread.sleep(4000);
	                 driver.findElement(By.xpath(obj.getProperty("RCancel"))).click();
	                 Thread.sleep(4000);
	                 Assert.assertTrue(Rfn.getText().equals(""),"First Name field is not Empty");
	                 Assert.assertTrue(Rln.getText().equals(""),"Last Name field is not Empty");
	                 Assert.assertTrue(Rphno.getText().equals(""),"Phone Number field is not Empty");
	                 Assert.assertTrue(Remail.getText().equals(""),"Email field is not Empty");
	                 Assert.assertTrue(Raddress.getText().equals(""),"Address field is not Empty");
	                 Assert.assertTrue(Rcity.getText().equals(""),"City field is not Empty");
	                // Assert.assertTrue(Rstate.getText().equals(""),"State field is not Empty");
	                 Assert.assertTrue(Rzip.getText().equals(""),"Zip field is not Empty");
	                 Assert.assertTrue(Latitude.getText().equals(""),"Latitude field is not Empty");
	                 Assert.assertTrue(Longitude.getText().equals(""),"Longitude field is not Empty");
	                 Assert.assertTrue(BeconList_right.getText().equals(""),"BeconList field is not Empty");
	                 Assert.assertTrue(Rid.getText().equals(""),"Recipient Id field is not Empty");
	                 Assert.assertTrue(ErrMsg.isDisplayed()==true,"Message is not erased");
	                

	     }
	//@Test(priority=3)
	   public void FindRecipientPage_Displayed() throws InterruptedException
	   {
		   Thread.sleep(4000);      
        driver.findElement(By.xpath(obj.getProperty("Find_Tab"))).click();
        Thread.sleep(4000);
        driver.findElement(By.xpath(obj.getProperty("Find_RecipientTab"))).click();
        Thread.sleep(14000);
        String title2=driver.getTitle();
		  String ActualTitle2="Search Recipients";
		  boolean res7=title2.contentEquals(ActualTitle2);
		  Assert.assertTrue(res7, "Find Recipient page is not displayed");
	   }
	//@Test(priority=4)
	   public void Clickhere_Link() throws InterruptedException
	   {
		Thread.sleep(15000);
		driver.findElement(By.xpath(obj.getProperty("ClickHereToAddRecipient"))).click();
		Thread.sleep(2000);
		String title1=driver.getTitle();
		  String ActualTitle="Add Recipients";
		  boolean res6=title1.contentEquals(ActualTitle);
		  Assert.assertTrue(res6, "Add New Recipient page is not displayed");
		
	   }
	@Test(priority=5)
	   public void FindRecipientPage() throws InterruptedException
	   {
		   Thread.sleep(4000);      
     driver.findElement(By.xpath(obj.getProperty("Find_Tab"))).click();
     Thread.sleep(4000);
     driver.findElement(By.xpath(obj.getProperty("Find_RecipientTab"))).click();
     Thread.sleep(14000);
     String title2=driver.getTitle();
		  String ActualTitle2="Search Recipients";
		  boolean res7=title2.contentEquals(ActualTitle2);
		  Assert.assertTrue(res7, "Find Recipient page is not displayed");
	   }
	
	@Test(priority=6)
	   public void FindRecipient() throws InterruptedException
	   {
				 Thread.sleep(4000);
	               SearchById=driver.findElement(By.xpath(obj.getProperty("Find_Recipient"))); 
	               Thread.sleep(15000);
	               SearchById.sendKeys(RfnVal);
	               action=new Actions(driver);
	               action.sendKeys(SearchById, Keys.BACK_SPACE).perform();
	               driver.findElement(By.xpath(obj.getProperty("Select_Recipient"))).click();
	               Thread.sleep(10000);
	               String title3=driver.getTitle();
	      		  String ActualTitle3="Recipient Details";
	      		  boolean res8=title3.contentEquals(ActualTitle3);
	      		  Assert.assertTrue(res8, "Recipient Details page is not displayed");
	               String RecName=driver.findElement(By.xpath("//h3[@class='ng-binding']")).getText();
	          	   String name=RecName.replaceAll("Send Message","");
	          	   String concat="RfnVal"+"RlnVal";
	          	   System.out.println(name);
	          	 System.out.println(concat);
	          	   boolean res5=RecName.matches(concat);
	          	   System.out.println(RecName);
	          	  //  Assert.assertTrue(res5,"Recipient is not found");
	   }
	 @Test(priority=7)
	   public static void EditRecipientCheck_Details() throws InterruptedException 
	   {
		    ERfn=driver.findElement(By.xpath(obj.getProperty("First_Name")));
		    ERln=driver.findElement(By.xpath(obj.getProperty("Last_Name")));
		    ERPhno=driver.findElement(By.xpath(obj.getProperty("Phone_Number")));
		    ERemail=driver.findElement(By.xpath(obj.getProperty("Email_Address")));
		    String ERfn1=ERfn.getAttribute("value");
		    System.out.println("Hi");
		   // System.out.println(ERfn.getText());
		    System.out.println(ERfn1);
		    String ERln1=ERln.getAttribute("value");
		    String ERPhno1=ERPhno.getAttribute("value");
		    String ERemail1= ERemail.getAttribute("value");
		    System.out.println(ERemail.getAttribute("value"));
		    System.out.println("Personnel panel Email matching result= "+ERemail1);
		    Assert.assertTrue(RfnVal.equals(ERfn1), "First Name is not matching");
		    Assert.assertTrue(RlnVal.equals(ERln1), "Last Name is not matching");
		    Assert.assertTrue(RPhnoVal.equals(ERPhno1), "Phone Number is not matching");
		    Assert.assertTrue(RemailVal.equals(ERemail1), "Email Address is not matching");
	   }
	   
	   
@Test(priority=8)
	   public static void EditRecipientPanel() throws InterruptedException
	   {
		   Thread.sleep(4000);
		   driver.findElement(By.xpath(obj.getProperty("EditButton"))).click();
		    Assert.assertTrue(ERfn.isEnabled(),"Disabled");
		    Assert.assertTrue(ERln.isEnabled(),"Disabled");
		    Assert.assertTrue(ERPhno.isEnabled(),"Disabled");
		    Assert.assertFalse(ERemail.isEnabled(),"Enabled");
	   }
	  

@Test(priority=9)
public static void EditRecipient_ValidEvent() throws InterruptedException, InvalidFormatException, IOException
{
	 Thread.sleep(5000);
    String lc_ERfncellvalue="", lc_ERlncellvalue="",  lc_ERphnocellvalue="", lc_ERemailcellvalue="";
 	    
	    int editrecrct=Recipient.getLastRowNum();
	    for (int i=1; i<=editrecrct; i++)
		{  
		     int j=0;
		     int count=0;
	    
	    try
	    {
	    	
	    	lc_ERfncellvalue=excelvalidation(Recipient.getRow(i).getCell(j));
	    	ERfn.clear();
	    	ERfn.sendKeys(lc_ERfncellvalue);
	    	if(lc_ERfncellvalue.matches(RFNameregex)==false)
	    	{
	    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Recipient First Name');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("Invalid User First Name: "+ lc_ERfncellvalue);
			       count=count+1;
	    	}
	    	else
	    	{
	    		ERfn.clear();
	    		ERfn.sendKeys(lc_ERfncellvalue);
	    		ERfnVal=lc_ERfncellvalue;
	    		System.out.println(ERfnVal);
	    		
	    	}
	     }
	     catch(NullPointerException ex)
	     {
	    	    ERfn.sendKeys("a");
	    	    ERfn.clear();
		       ((JavascriptExecutor)driver).executeScript("alert('Recipient First Name is Empty');");
		       Thread.sleep(3000);
		       driver.switchTo().alert().accept();
		       System.out.println("empty Recipient  first name");
		       count=count+1;
	      }
	    
	   try
	    {
	    	lc_ERlncellvalue=excelvalidation(Recipient.getRow(i).getCell(j+1));
	    	ERln.clear();
	    	ERln.sendKeys(lc_ERlncellvalue);
	    	if(lc_ERlncellvalue.matches(RLNameregex)==false)
	    	{
	    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid User Last Name');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("Invalid User Last Name: "+ lc_ERlncellvalue);
			       count=count+1;
	    	}
	    	else
	    	{
	    		ERln.clear();
	    		ERln.sendKeys(lc_ERlncellvalue);
	    		ERlnVal=lc_ERlncellvalue;
	    		System.out.println(ERlnVal);
	    	}
	     }
	     catch(NullPointerException ex)
	     {
	    	   ERln.sendKeys("a");
	    	   ERln.clear();
		       ((JavascriptExecutor)driver).executeScript("alert('User Last Name is Empty');");
		       Thread.sleep(3000);
		       driver.switchTo().alert().accept();
		       System.out.println("empty user last name");
		       count=count+1;
	      }
	
	    try
	    {
	    	lc_ERphnocellvalue=excelvalidation(Recipient.getRow(i).getCell(j+2));
	    	ERPhno.clear();
	    	ERPhno.sendKeys(lc_ERphnocellvalue);
	    	if(lc_ERphnocellvalue.matches(Rphregex)==false)
	    	{
	    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Phone Number');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("Invalid Phone No: "+ lc_ERphnocellvalue);
			       count=count+1;
	    	}
	    	else
	    	{
	    		ERPhno.clear();
	    		ERPhno.sendKeys(lc_ERphnocellvalue);
	    		ERPhnoVal=lc_ERphnocellvalue;
	    		System.out.println(ERPhnoVal);
	    	}
	     }
	     catch(NullPointerException ex)
	     {
	    	 ERPhno.sendKeys("a");
	    	 ERPhno.clear();
		       ((JavascriptExecutor)driver).executeScript("alert('Phone Number is empty');");
		       Thread.sleep(3000);
		       driver.switchTo().alert().accept();
		       System.out.println("empty phone number");
		       count=count+1;
      }
	    
	    Row row =Recipient.getRow(i);
		 Cell invalidcell=row.createCell(j+3);
		if(count!=0)
		{
						   
						   invalidcell.setCellValue("invalid");
						  
						   
			try
			{
				excelfile1= new FileOutputStream("C:\\Users\\compu\\Desktop\\Projects\\Carelink360\\TestData\\Automation1.xlsx");
			      wb.write(excelfile1);
			      excelfile1.close();
			     }
			  catch(Throwable t )
			     {
				  System.out.println("File not found");
			     }	 			
						  
				        
		   }
		 else
		   {
			   invalidcell.setCellValue("valid");
			   
			   try
			     {
		 			excelfile1= new FileOutputStream("C:\\Users\\compu\\Desktop\\Projects\\Carelink360\\TestData\\Automation1.xlsx");
			      wb.write(excelfile1);
			      excelfile1.close();
			     }
			  catch(Throwable t )
			     {
				  System.out.println("File not found");
			     }	
			   
			   Thread.sleep(4000);
			   driver.findElement(By.xpath(obj.getProperty("SaveChangesButton1"))).click();
		   }
		}
}

@Test(priority=10)
public static void RecipientDetails_Update() throws InterruptedException, InvalidFormatException, IOException
{
	    Thread.sleep(4000);
	    Assert.assertFalse(ERfn.isEnabled(),"Enabled");
	    Assert.assertFalse(ERln.isEnabled(),"Enabled");
	    Assert.assertFalse(ERPhno.isEnabled(),"Enabled");
	    Assert.assertFalse(ERemail.isEnabled(),"Enabled"); 
	    String UERfn=ERfn.getAttribute("value");
	    String UERln=ERln.getAttribute("value");
	    String UERPhno=ERPhno.getAttribute("value");
	    String UERemail= ERemail.getAttribute("value");
	    Assert.assertTrue(ERfnVal.equals(UERfn), "First Name is not matching");
	    Assert.assertTrue(ERlnVal.equals(UERln), "Last Name is not matching");
	    Assert.assertTrue(ERPhnoVal.equals(UERPhno), "Phone Number is not matching");    
	    
}
@Test(priority=11)
public static void AddContactPopUp_Displayed() throws InterruptedException
{
 Thread.sleep(10000);
 AddContact_Btn=driver.findElement(By.xpath(obj.getProperty("AddButton1")));
 AddContact_Btn.click();
 Thread.sleep(1000);
 String Msg10=driver.findElement(By.xpath(obj.getProperty("PopUp_Heading"))).getText();
 String ActualHeading="Add Recipient Contacts";
 boolean res10=Msg10.contentEquals(ActualHeading);
 Assert.assertTrue(res10, "pop-up is not displayed");
}


	 @Test(priority=12)
	 public static void AddContacts_Validations() throws InterruptedException, InvalidFormatException, IOException
	 {
		 
		 Thread.sleep(6000);
		 driver.findElement(By.xpath(obj.getProperty("AddButton1"))).click();
		 Thread.sleep(5000);
		 Cfn= driver.findElement(By.xpath(obj.getProperty("Add_FName")));
	     Cln= driver.findElement(By.xpath(obj.getProperty("Add_LName")));
	     CPhno= driver.findElement(By.xpath(obj.getProperty("Add_PNo")));
	     Cemail= driver.findElement(By.xpath(obj.getProperty("Add_EmailId")));
	     String lc_Cfncellvalue="", lc_Clncellvalue="",  lc_Cphnocellvalue="", lc_Cemailcellvalue="";
	  	    
		    int editrecrct=AddContacts.getLastRowNum();
		    for (int i=1; i<=editrecrct; i++)
			{  
			     int j=0;
			     int count=0;
		    
		    try
		    {
		    	
		    	lc_Cfncellvalue=excelvalidation(AddContacts.getRow(i).getCell(j));
		    	Cfn.sendKeys(lc_Cfncellvalue);
		    	if(lc_Cfncellvalue.matches(RFNameregex)==false)
		    	{
		    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Recipient First Name');");
				       Thread.sleep(3000);
				       driver.switchTo().alert().accept();
				       System.out.println("Invalid User First Name: "+ lc_Cfncellvalue);
				       count=count+1;
		    	}
		    	else
		    	{
		    		Cfn.clear();
		    		Cfn.sendKeys(lc_Cfncellvalue);
		    		Cfn_Val=lc_Cfncellvalue;
		    		System.out.println(Cfn_Val);
		    		
		    	}
		     }
		     catch(NullPointerException ex)
		     {
		    	    Cfn.sendKeys("a");
		    	    Cfn.clear();
			       ((JavascriptExecutor)driver).executeScript("alert('Recipient First Name is Empty');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("empty Recipient  first name");
			       count=count+1;
		      }
		    
		   try
		    {
		    	lc_Clncellvalue=excelvalidation(AddContacts.getRow(i).getCell(j+1));
		    	Cln.sendKeys(lc_Clncellvalue);
		    	if(lc_Clncellvalue.matches(RLNameregex)==false)
		    	{
		    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid User Last Name');");
				       Thread.sleep(3000);
				       driver.switchTo().alert().accept();
				       System.out.println("Invalid User Last Name: "+ lc_Clncellvalue);
				       count=count+1;
		    	}
		    	else
		    	{
		    		Cln.clear();
		    		Cln.sendKeys(lc_Clncellvalue);
		    		Cln_Val=lc_Clncellvalue;
		    		System.out.println(Cln_Val);
		    	}
		     }
		     catch(NullPointerException ex)
		     {
		    	   Cln.sendKeys("a");
		    	   Cln.clear();
			       ((JavascriptExecutor)driver).executeScript("alert('User Last Name is Empty');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("empty user last name");
			       count=count+1;
		      }
		
		    try
		    {
		    	lc_Cphnocellvalue=excelvalidation(AddContacts.getRow(i).getCell(j+2));
		    	System.out.println(lc_Cphnocellvalue);
		    	CPhno.sendKeys(lc_Cphnocellvalue);
		    	if(lc_Cphnocellvalue.matches(Rphregex)==false)
		    	{
		    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Phone Number');");
				       Thread.sleep(3000);
				       driver.switchTo().alert().accept();
				       System.out.println("Invalid Phone No: "+ lc_Cphnocellvalue);
				       count=count+1;
		    	}
		    	else
		    	{
		    		CPhno.clear();
		    		CPhno.sendKeys(lc_Cphnocellvalue);
		    		CPhno_Val=lc_Cphnocellvalue;
		    		System.out.println(CPhno_Val);
		    	}
		     }
		     catch(NullPointerException ex)
		     {
		    	 CPhno.sendKeys("a");
		    	 CPhno.clear();
			       ((JavascriptExecutor)driver).executeScript("alert('Phone Number is empty');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("empty phone number");
			       count=count+1;
		        }
		    lc_Cemailcellvalue=excelvalidation(AddContacts.getRow(i).getCell(j+3));
	    	
	    	if(lc_Cemailcellvalue.equals(""))
	    	{
	    		Cemail.sendKeys("a");
			       Cemail.clear();
			       ((JavascriptExecutor)driver).executeScript("alert('Email Address is empty');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("empty Email Address");
			       count=count+1;
	    	 }
	        else
	    	{
	    	  Cemail.sendKeys(lc_Cemailcellvalue);
	    	  if(lc_Cemailcellvalue.matches(Reidregex)==false)
	    	  {
	    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Email Address');");
			       Thread.sleep(3000);
			       driver.switchTo().alert().accept();
			       System.out.println("Invalid Email Address: "+ lc_Cemailcellvalue);
			       count=count+1;
	    	  }
	    	  else
	    	  {
	    		Cemail.clear();
	    		Cemail.sendKeys(lc_Cemailcellvalue);
	    		Cemail_Val=lc_Cemailcellvalue;
	    		System.out.println(Cemail_Val);
	    		
	    	  }
	    	 
	       }
		    
		    Row row = AddContacts.getRow(i);
			 Cell invalidcell=row.createCell(j+4);
			if(count!=0)
			{
							   
							   invalidcell.setCellValue("invalid");
							   Cfn.clear();
							   Cln.clear();
							   CPhno.clear();
							   Cemail.clear();
							   
				try
				{
					excelfile1= new FileOutputStream("C:\\Users\\compu\\Desktop\\Projects\\Carelink360\\TestData\\Automation1.xlsx");
				      wb.write(excelfile1);
				      excelfile1.close();
				     }
				  catch(Throwable t )
				     {
					  System.out.println("File not found");
				     }	 			
							  
					        
			   }
			 else
			   {
				   invalidcell.setCellValue("valid");
				   
				   try
				     {
			 			excelfile1= new FileOutputStream("C:\\Users\\compu\\Desktop\\Projects\\Carelink360\\TestData\\Automation1.xlsx");
				      wb.write(excelfile1);
				      excelfile1.close();
				     }
				  catch(Throwable t )
				     {
					  System.out.println("File not found");
				     }	
				   
				   Thread.sleep(4000);
				   driver.findElement(By.xpath(obj.getProperty("CSave"))).click();
			   }
			}
	 }
	 
	 @Test(priority=13)
	   public static void ContactAlresyExist() throws InterruptedException
	   {
		AddContact_Btn.click();
		Thread.sleep(1000);
		Cfn.sendKeys(Cfn_Val);
		Cln.sendKeys(Cln_Val);
		CPhno.sendKeys(CPhno_Val);
		Cemail.sendKeys(Cemail_Val);
		CSave.click();
		Thread.sleep(2000);
		String Msg20=driver.findElement(By.xpath(obj.getProperty("ContactExistMsg"))).getText();
        String ActualMsg20="Contact already exists.";
        boolean res20=Msg20.contentEquals(ActualMsg20);
        Assert.assertTrue(res20, "Duplicate Contact is added");
		
	   } 
	 
	 
	 @Test(priority=14)
	   public static void AddMoreContacts() throws InterruptedException
	   {
		AddContact_Btn.click();
		Thread.sleep(1000);
		Cfn.sendKeys(obj.getProperty("ACfnVal"));
		Cln.sendKeys(obj.getProperty("AClnVal"));
		CPhno.sendKeys(obj.getProperty("ACPhnoVal"));
		Cemail.sendKeys(obj.getProperty("ACemailVal"));
		CSave.click();
	   }
	 
	 
	 @Test(priority=15)
	   public static void EditContactPopup_Displayed() throws InterruptedException
	   {
		    EditContact_Btn=driver.findElement(By.xpath(obj.getProperty("ECBtn")));
		    EditContact_Btn.click();
	        String Msg10=driver.findElement(By.xpath(obj.getProperty("ECPopUp_Heading"))).getText();
	        String ActualHeading="Add Recipient Contacts";
	        boolean res10=Msg10.contentEquals(ActualHeading);
	        Assert.assertTrue(res10, "pop-up is not displayed");
	   }
	 
	 @Test(priority=16)
	 public static void EditContacts_ValidEvent() throws InterruptedException, InvalidFormatException, IOException
	 {
	 	 String lc_ECfncellvalue="", lc_EClncellvalue="",  lc_ECphnocellvalue="", lc_ECemailcellvalue="";
	 	 Thread.sleep(5000);
	 	 ECfn= driver.findElement(By.xpath(obj.getProperty("Edit_FirstName")));
	     ECln= driver.findElement(By.xpath(obj.getProperty("Edit_LastName")));
	     ECPhno= driver.findElement(By.xpath(obj.getProperty("Edit_PhoneNo")));
	     ECemail= driver.findElement(By.xpath(obj.getProperty("Edit_Email")));
	 	    
	 	    int editcontctrct=EditContacts.getLastRowNum();
	 	    for (int i=1; i<=editcontctrct; i++)
	 		{  
	 		     int j=0;
	 		     int count=0;
	 		     
	 	    try
	 	    {
	 	    	
	 	    	lc_ECfncellvalue=excelvalidation(EditContacts.getRow(i).getCell(j));
	 	    	ECfn.clear();
	 	    	ECfn.sendKeys(lc_ECfncellvalue);
	 	    	if(lc_ECfncellvalue.matches(RFNameregex)==false)
	 	    	{
	 	    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Recipient First Name');");
	 			       Thread.sleep(3000);
	 			       driver.switchTo().alert().accept();
	 			       System.out.println("Invalid User First Name: "+lc_ECfncellvalue);
	 			       count=count+1;
	 	    	}
	 	    	else
	 	    	{
	 	    		ECfn.clear();
	 	    		ECfn.sendKeys(lc_ECfncellvalue);
	 	    		ECfn_Val=lc_ECfncellvalue;
	 	    		System.out.println(Cfn_Val);
	 	    		
	 	    	}
	 	     }
	 	     catch(NullPointerException ex)
	 	     {
	 	    	    ECfn.sendKeys("a");
	 	    	    ECfn.clear();
	 		       ((JavascriptExecutor)driver).executeScript("alert('Recipient First Name is Empty');");
	 		       Thread.sleep(3000);
	 		       driver.switchTo().alert().accept();
	 		       System.out.println("empty Recipient  first name");
	 		       count=count+1;
	 	      }
	 	    
	 	   try
	 	    {
	 		   
	 	    	lc_EClncellvalue=excelvalidation(EditContacts.getRow(i).getCell(j+1));
	 	    	ECln.clear();
	 	    	ECln.sendKeys(lc_EClncellvalue);
	 	    	if(lc_EClncellvalue.matches(RLNameregex)==false)
	 	    	{
	 	    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid User Last Name');");
	 			       Thread.sleep(3000);
	 			       driver.switchTo().alert().accept();
	 			       System.out.println("Invalid User Last Name: "+lc_EClncellvalue);
	 			       count=count+1;
	 	    	}
	 	    	else
	 	    	{
	 	    		ECln.clear();
	 	    		ECln.sendKeys(lc_EClncellvalue);
	 	    		ECln_Val=lc_EClncellvalue;
	 	    		System.out.println(Cln_Val);
	 	    	}
	 	     }
	 	     catch(NullPointerException ex)
	 	     {
	 	    	   ECln.sendKeys("a");
	 	    	   ECln.clear();
	 		       ((JavascriptExecutor)driver).executeScript("alert('User Last Name is Empty');");
	 		       Thread.sleep(3000);
	 		       driver.switchTo().alert().accept();
	 		       System.out.println("empty user last name");
	 		       count=count+1;
	 	      }
	 	
	 	    try
	 	    {
	 	    	lc_ECphnocellvalue=excelvalidation(EditContacts.getRow(i).getCell(j+2));
	 	    	ECPhno.clear();
	 	    	ECPhno.sendKeys(lc_ECphnocellvalue);
	 	    	if(lc_ECphnocellvalue.matches(Rphregex)==false)
	 	    	{
	 	    		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Phone Number');");
	 			       Thread.sleep(3000);
	 			       driver.switchTo().alert().accept();
	 			       System.out.println("Invalid Phone No: "+ lc_ECphnocellvalue);
	 			       count=count+1;
	 	    	}
	 	    	else
	 	    	{
	 	    		ECPhno.clear();
	 	    		ECPhno.sendKeys(lc_ECphnocellvalue);
	 	    		ECPhno_Val=lc_ECphnocellvalue;
	 	    		System.out.println(CPhno_Val);
	 	    	}
	 	     }
	 	     catch(NullPointerException ex)
	 	     {
	 	    	 ECPhno.sendKeys("a");
	 	    	 ECPhno.clear();
	 		       ((JavascriptExecutor)driver).executeScript("alert('Phone Number is empty');");
	 		       Thread.sleep(3000);
	 		       driver.switchTo().alert().accept();
	 		       System.out.println("empty phone number");
	 		       count=count+1;
	 	        }
	 	    lc_ECemailcellvalue=excelvalidation(EditContacts.getRow(i).getCell(j+3));
	 	    ECemail.clear();
	  	if(lc_ECemailcellvalue.equals(""))
	  	{
	  		ECemail.sendKeys("a");
	 		       ECemail.clear();
	 		       ((JavascriptExecutor)driver).executeScript("alert('Email Address is empty');");
	 		       Thread.sleep(3000);
	 		       driver.switchTo().alert().accept();
	 		       System.out.println("empty Email Address");
	 		       count=count+1;
	  	 }
	      else
	  	{
	  	  ECemail.sendKeys(lc_ECemailcellvalue);
	  	  if(lc_ECemailcellvalue.matches(Reidregex)==false)
	  	  {
	  		 ((JavascriptExecutor)driver).executeScript("alert('Invalid Email Address');");
	 		       Thread.sleep(3000);
	 		       driver.switchTo().alert().accept();
	 		       System.out.println("Invalid Email Address: "+ lc_ECemailcellvalue);
	 		       count=count+1;
	  	  }
	  	  else
	  	  {
	  		ECemail.clear();
	  		ECemail.sendKeys(lc_ECemailcellvalue);
	  		ECemail_Val=lc_ECemailcellvalue;
	  		System.out.println(Cemail_Val);
	  		
	  	  }
	  	 
	     }
	 	    
	 	    Row row = EditContacts.getRow(i);
	 		 Cell invalidcell=row.createCell(j+4);
	 		if(count!=0)
	 		{
	 						   
	 						   invalidcell.setCellValue("invalid");
	 						     ECfn.clear();
	 						     ECln.clear();
	 						     ECPhno.clear();
	 						     ECemail.clear();
	 						   
	 			try
	 			{
	 				excelfile1= new FileOutputStream("C:\\Users\\compu\\Desktop\\Projects\\Carelink360\\TestData\\Automation1.xlsx");
	 			      wb.write(excelfile1);
	 			      excelfile1.close();
	 			     }
	 			  catch(Throwable t )
	 			     {
	 				  System.out.println("File not found");
	 			     }	 			
	 						  
	 				        
	 		   }
	 		 else
	 		   {
	 			   invalidcell.setCellValue("valid");
	 			   
	 			   try
	 			     {
	 		 			excelfile1= new FileOutputStream("C:\\Users\\compu\\Desktop\\Projects\\Carelink360\\TestData\\Automation1.xlsx");
	 			      wb.write(excelfile1);
	 			      excelfile1.close();
	 			     }
	 			  catch(Throwable t )
	 			     {
	 				  System.out.println("File not found");
	 			     }	
	 			   
	 			   Thread.sleep(4000);
	 			   ECSave=driver.findElement(By.xpath(obj.getProperty("ECSave")));
	 			   ECSave.click();
	 		   }
	 }
	 }	 
	
	//  @AfterTest
	  public void afterTest() {
		  quit();
	  }

	}


